import numpy as np


'''
numpy中的ogrid对象可以快速生成一列、一行向量，虽然生成的是行、列向量，但是ogrid对象
的本质更像是一个多维数组；
【调用签名】：x, y = np.ogrid[x:x, x:x]
注意这里的括号是中括号，括号中两个参数分别指定了生成列和生成行的范围
'''
# 1>ogrid对象的调用方法
x, y = np.ogrid[0:3, 0:3]
print(x, y)  # 注意这里的x对应于列向量，y对应于行向量
m, n = np.ogrid[:3, :3]
print(x == m)  # 注意：当行、列的范围起始位置为0时，“0”可以省略，结果一样

# 2>ogrid所生成列向量的索引
x, y = np.ogrid[2:5, 3:10]
print(x)
print(y)
print(x[0])  # 此时索引出的是一个行向量，因为同行仅一个元素，所以结果为[2]，中括号表示其是向量
# print(x[0, 1]),这段代码程序是报错的，索引中括号中的第二个参数在这里应该为0，表示第一列的元素
print(x[1, 0])  # 这时候索引出的是一个数，而不是一个向量

# 3>ogrid所生成行向量的索引
# print(y[1])，这段代码是报错的，因为这个行向量没有第二行
print(y[0])  # 此时输出的是整个行向量，但比起对象【y】是少了一个中括号
print(y[0, 2])  # 此时索引出的是【第一行第三列】的一个数值


