import numpy as np


# 1>列向量和行向量相加减
'''
在数学(线性代数)中，只有shape(形状大小)相同的矩阵才能相加减，法则为对应元素相加减；
而在numpy中制定了【列向量可以加减行向量】的规则；
【相加减规则】：
1>加减的两个向量中的元素个数可以不相等；
2>加减后产生一个矩阵，该矩阵形状为：行数等于列向量行数，列数等于行向量列数
3>定义x为列向量，y为行向量，则：x+y = y+x
'''
x = np.array([[1, 2, 3]])
y = np.array([[6], [9], [10], [11]])
print(x)
print(y)

print(x + y)
print(y + x)

# 2>列向量和行向量相乘除
'''
在数学(线性代数)中，一个行向量和一个元素相等的列向量相乘等于它们的内积，结果是一个数字，
而一个列向量和一个任意元素数量的行向量相乘可以得到一个矩阵，矩阵的行数等于列向量行数，列数等于行向量列数；
然而在numpy中，【列向量和行向量的相乘除】规则稍有不同：
【相乘除规则】：
1>乘除中的两个向量元素个数可以不相同
2>乘除后产生一个矩阵(无论乘除顺序)，矩阵行数为列向量行数，列数为行向量列数；
3>定义x为列向量，y为行向量，则：x*y = y*x
'''
print(x * y)
print(y * x)

print(x ** 2)